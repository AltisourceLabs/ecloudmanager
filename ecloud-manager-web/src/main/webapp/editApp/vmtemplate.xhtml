<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ The MIT License (MIT)
  ~
  ~ Copyright (c) 2016 Altisource Labs
  ~
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy
  ~ of this software and associated documentation files (the "Software"), to deal
  ~ in the Software without restriction, including without limitation the rights
  ~ to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~ copies of the Software, and to permit persons to whom the Software is
  ~ furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in all
  ~ copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  ~ SOFTWARE.
  -->
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:p="http://primefaces.org/ui"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
>
    <p:commandButton value="&#160;Import Settings..."
                     icon="fa fa-cart-arrow-down fa-lg"
                     action="#{importVMTemplateController.init()}"
                     oncomplete="PF('dlg_import_vmtemplate').show()"
                     update="@widgetVar(dlg_import_vmtemplate)"
    />
    <p:panelGrid id="panelgrid_edit" columns="2" style="margin-bottom:10px" styleClass="ui-panelgrid-blank panelgrid-edit-vmtemplate"
                 cellpadding="5" columnClasses="colLabel, colValue">

        <p>Name: <p:inputText id="input_name" value="#{vmTemplateController.value.name}"/></p>

        <p>Description: <p:inputTextarea id="input_description" value="#{vmTemplateController.value.description}"/></p>

        <p>vCPUs: <p:inputText id="input_cpu" value="#{vmTemplateController.value.processorCount}"/></p>

        <p>Memory (MB): <p:inputText id="input_memory"
                                     value="#{vmTemplateController.value.memory}"/></p>

        <p>Storage (GB): <p:inputText id="input_storage"
                                      value="#{vmTemplateController.value.storage}"/>
        </p>
        <p>Always run 'chef-client' on update: <p:selectBooleanCheckbox
                value="#{vmTemplateController.value.forceChefProvisioningUpdate}"/>
        </p>
    </p:panelGrid>
    <p:dataTable var="recipe" value="#{vmTemplateController.value.runlist}"
                 draggableRows="true" id="recipes" widgetVar="vmtemplateRecipesTable">
        <f:facet name="header">Chef run list</f:facet>
        <p:ajax event="rowReorder" listener="#{vmTemplateController.onRowReorder}"/>
        <p:column id="column_recipe_id" headerText="Recipe Name">
            <h:outputText value="#{recipe.name}"/>
        </p:column>
        <p:column id="column_recipe_action" width="30">
            <p:commandButton id="delete_recipe" title="Delete" icon="ui-icon-close"
                             update="recipes"
                             action="#{vmTemplateController.deleteRecipe(recipe)}"/>
        </p:column>
    </p:dataTable>

    <p:selectOneMenu id="addRecipe" value="#{vmTemplateController.recipeToAdd}"
                     converter="recipeConverter" styleClass="comboAndButton">
        <f:selectItem itemLabel="Select recipe to add" itemValue=""/>
        <f:selectItems value="#{vmTemplateController.getRecipes(applicationDeploymentEditorController.deployment)}"/>
    </p:selectOneMenu>
    <p:commandButton id="add_recipe" value="Add"
                     styleClass="comboAndButton"
                     update="recipes, addRecipe, vmTemplateMessages"
                     action="#{vmTemplateController.addRecipe}"/>

    <p:growl id="vmTemplateMessages" sticky="true" showDetail="true"/>
</ui:composition>

