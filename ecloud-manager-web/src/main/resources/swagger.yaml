  swagger: '2.0'
  info:
    version: 0.0.0
    title: Deployment Manager
  securityDefinitions:
    basicAuth:
      type: basic
      description: HTTP Basic Authentication
  paths:
    /:
      get:
        tags:
        - deployment
        summary: Get Deployment API info
        operationId: getInfo
        produces:
        - application/json
        responses:
          200:
            description: Successful
            schema:
              $ref: '#/definitions/APIInfo'
        security:
         - basicAuth: []
    /task/{taskId}:
      get:
        tags:
        - tasks
        summary: Get task information
        operationId: getTask
        produces:
        - application/json
        parameters:
        - name: taskId
          in: path
          description: ID of task to return
          required: true
          type: string
        responses:
          200:
            description: Successful
            schema:
              $ref: '#/definitions/TaskInfo'
          400:
            description: Invalid ID
          404:
            description: Task not found
        security:
         - basicAuth: []
      delete:
        tags:
        - tasks
        summary: Delete task
        operationId: deleteTask
        produces:
        - application/json
        parameters:
        - name: taskId
          in: path
          description: ID of task to delete
          required: true
          type: string
        responses:
          200:
            description: Successful
            schema:
              $ref: '#/definitions/TaskInfo'
          400:
            description: Invalid ID
          404:
            description: Task not found
        security:
         - basicAuth: []
    /task/{taskId}/pollLog:
      get:
        tags:
        - tasks
        summary: Poll task's log
        operationId: pollLog
        produces:
        - application/json
        parameters:
        - name: taskId
          in: path
          description: ID of task to return
          required: true
          type: string
        responses:
          200:
            description: Successful
            schema:
              type: array
              items: 
                $ref: '#/definitions/LoggingEvent'
        security:
         - basicAuth: []
    /deployment/:
      get:
        tags:
        - deployment
        summary: "Get deployments"
        operationId: getDeployments
        consumes:
        - application/json
        produces:
        - application/json
        parameters:
        - name: name
          in: query
          description: Deployment name
          required: false
          type: string
        responses:
          200:
            description: Deployment ids
            schema:
              type: array
              items:
                type: string
        security:
         - basicAuth: []
    /deployment/{deploymentId}:
      get:
        tags:
        - deployment
        summary: Get deployment information
        operationId: getDeployment
        produces:
        - application/json
        parameters:
        - name: deploymentId
          in: path
          description: Id of deployment to return
          required: true
          type: string
        responses:
          200:
            description: Deployment name
            schema:
              type: string
          404:
            description: Deployment not found
        security:
         - basicAuth: []
    /deployment/{id}/deploy:
      post:
        tags:
        - deployment
        summary: Deploy application
        operationId: deploy
        produces:
        - application/json
        parameters:
        - name: id
          in: path
          description: Id of deployment
          required: true
          type: string
        responses:
          202:
            description: Task id
            schema:
              type: string              
        security:
         - basicAuth: []
  definitions:
    APIInfo:
      properties:
        id:
          type: string
        description:
          type: string
        version:
          type: string
        revision:
          type: string
    TaskInfo:
      properties:
        done:
          type: boolean
        value:
          type: object
        exception:
          $ref: '#/definitions/LoggingEvent'          
    LoggingEvent:
      properties:
        level:
          type: string
        message:
          type: string
        timeStamp:
          type: integer
          format: int64
        logger:
          type: string
        throwable:
          type: string
